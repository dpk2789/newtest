@model Accounts.Model.Model.PurchaseTaxes

<div data-role="page">
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
</div>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "purchasetax" }))
{
    @Html.AntiForgeryToken()
    <p class="text-danger" id="MessageToClient"></p>
    <div class="modal-header">
        <a class="close" data-dismiss="modal" aria-hidden="True">&times;</a>
        <h4 class="modal-title">Add Tax</h4>
    </div>
    <div class="modal-body">
        <div class="form-horizontal">
            @Html.HiddenFor(m => m.PurchaseBillId)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.TaxCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TaxCode, new
               {
                   htmlAttributes = new
                       {
                           @class = "ui-autocomplete-input form-control",
                           data_url = Url.Action("GetTaxesForAutocomplete", "Taxes")
                       }
               })
                    @Html.ValidationMessageFor(model => model.TaxCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Percent, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Percent, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Percent, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>
    <div class="modal-footer">
        <a class="btn btn-default" data-dismiss="modal">Cancel</a>
        <input class="btn btn-primary" type="submit" value="Add" />
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
